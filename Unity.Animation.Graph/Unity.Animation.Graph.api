// This file is generated. Do not modify by hand.
// XML documentation file not found. To check if public methods have XML comments,
// make sure the XML doc file is present and located next to the scraped dll
namespace Unity.Animation
{
    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"d10f1f8e08af4dc094ec9a0503838b1d", 1, @"Animation Core/Utils", @"Adds two animation streams", false)] public class AddPoseNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.AddPoseNode.Data, Unity.Animation.AddPoseNode.SimPorts, Unity.Animation.AddPoseNode.KernelData, Unity.Animation.AddPoseNode.KernelDefs, Unity.Animation.AddPoseNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public AddPoseNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.AddPoseNode.KernelData, Unity.Animation.AddPoseNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.AddPoseNode.KernelData data, ref Unity.Animation.AddPoseNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"16d7457b41fd4206931ba315ee5b83e0", , @"Input stream A", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.AddPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> InputA;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0fe3b6f671c84554902ce26908cc7b8c", , @"Input stream B", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.AddPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> InputB;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"44cd25b8e7f8469d9cc2f44615c2db2f", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.AddPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a46b4937ad0241eb9039b0af7b22962a", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.AddPoseNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"e1446b44998a48a4803fd10b9508857f", 1, @"Animation Core/Constraints", @"Aim constraint based on multiple sources", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Source Count", 1, 1, -1, )] public class AimConstraintNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.AimConstraintNode.Data, Unity.Animation.AimConstraintNode.SimPorts, Unity.Animation.AimConstraintNode.KernelData, Unity.Animation.AimConstraintNode.KernelDefs, Unity.Animation.AimConstraintNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.AimConstraintNode.SetupMessage>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public AimConstraintNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.AimConstraintNode.SetupMessage msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.AimConstraintNode.KernelData, Unity.Animation.AimConstraintNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.AimConstraintNode.KernelData data, ref Unity.Animation.AimConstraintNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int Index;
            public Unity.Mathematics.float3 LocalAimAxis;
            public Unity.Mathematics.bool3 LocalAxesMask;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0ec7455707ba481da8d850a554186c30", , @"Constrained animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7107632ecabf47bdbbdcad245c7483f3", , @"Extra local offset to apply to the constrained bone expressed in Euler angles (degrees)", false, -1, @"zero", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, Unity.Mathematics.float3> LocalOffset;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9a8ecc1095b84d7da5e2902feb626246", , @"Extra local offset rotation order", false, -1, 4, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, Unity.Mathematics.math.RotationOrder> LocalOffsetRotationOrder;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8574fb7d7a744d7f96b6faadce83dfd8", , @"Maximum angle limit (degrees)", false, -1, 180, 0, false, -180, 180)] public Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, float> MaxAngleLimit;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"452289c848ec4f70bfd272ea6f43804e", , @"Minimum angle limit (degrees)", false, -1, -180, 0, false, -180, 180)] public Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, float> MinAngleLimit;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"af6572d18c8a43eb99056a48a2b0a05c", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.AimConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ca51dfae5afb4078a74ea4f4a7a76413", @"Source Rotation Offset", @"Rotation offset of source", false, 1, @"identity", 2, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, Unity.Mathematics.quaternion>> SourceOffsets;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7c8c9cb5b21d42b09cefdc1ca6acdc46", @"Source Position", @"Position of source", false, 1, @"zero", 2, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, Unity.Mathematics.float3>> SourcePositions;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9018ec9b19d84714a2fe0a2a9ec18580", @"Source Weight", @"Weight of source", false, 1, 1, 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, float>> SourceWeights;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2987902310a447ffb6ce201111ddb512", , @"Constraint weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.AimConstraintNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SetupMessage
        {
            public int Index;
            public Unity.Mathematics.float3 LocalAimAxis;
            public Unity.Mathematics.bool3 LocalAxesMask;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"164bc1866708475491e9329bf2aa29e0", @"Setup", @"Aim constraint properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.AimConstraintNode, Unity.Animation.AimConstraintNode.SetupMessage> ConstraintSetup;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"691f5329e50149fca0f721d99bc24b0a", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.AimConstraintNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    public abstract class AnimationSystemBase<TTag> : Unity.Animation.AnimationSystemBase<TTag, Unity.Animation.NotSupportedTransformHandle, Unity.Animation.NotSupportedTransformHandle, Unity.Animation.NotSupportedRootMotion> where TTag : System.ValueType, Unity.Animation.IAnimationSystemTag, new()
    {
        protected AnimationSystemBase() {}
        protected virtual void OnCreateForCompiler();
    }

    public abstract class AnimationSystemBase<TTag, TReadTransformHandle, TWriteTransformHandle> : Unity.Animation.AnimationSystemBase<TTag, TReadTransformHandle, TWriteTransformHandle, Unity.Animation.NotSupportedRootMotion> where TTag : System.ValueType, Unity.Animation.IAnimationSystemTag, new() where TReadTransformHandle : System.ValueType, Unity.Animation.IReadTransformHandle, new() where TWriteTransformHandle : System.ValueType, Unity.Animation.IWriteTransformHandle, new()
    {
        protected AnimationSystemBase() {}
        protected virtual void OnCreateForCompiler();
    }

    public abstract class AnimationSystemBase<TTag, TReadTransformHandle, TWriteTransformHandle, TAnimatedRootMotion> : Unity.Entities.SystemBase, Unity.Animation.IAnimationSystem, Unity.Animation.IAnimationSystem<TTag> where TTag : System.ValueType, Unity.Animation.IAnimationSystemTag, new() where TReadTransformHandle : System.ValueType, Unity.Animation.IReadTransformHandle, new() where TWriteTransformHandle : System.ValueType, Unity.Animation.IWriteTransformHandle, new() where TAnimatedRootMotion : System.ValueType, Unity.Animation.IAnimatedRootMotion, new()
    {
        public virtual int RefCount { get; }
        public virtual Unity.DataFlowGraph.NodeSet Set { get; }
        public virtual TTag TagComponent { get; }
        protected AnimationSystemBase() {}
        public virtual void AddRef();
        public virtual Unity.Animation.GraphHandle CreateGraph();
        public virtual Unity.DataFlowGraph.NodeHandle<T> CreateNode<T>(Unity.Animation.GraphHandle handle) where T : Unity.DataFlowGraph.NodeDefinition, new();
        public virtual Unity.DataFlowGraph.NodeHandle<Unity.DataFlowGraph.ComponentNode> CreateNode(Unity.Animation.GraphHandle handle, Unity.Entities.Entity entity);
        public virtual void Dispose(Unity.Animation.GraphHandle handle);
        protected virtual void OnCreate();
        protected virtual void OnCreateForCompiler();
        protected virtual void OnUpdate();
        public virtual void RemoveRef();
        protected Unity.Jobs.JobHandle ScheduleGraphEvaluationJobs(Unity.Jobs.JobHandle inputDeps);
        protected Unity.Jobs.JobHandle ScheduleReadComponentDataJobs(Unity.Jobs.JobHandle inputDeps);
        protected Unity.Jobs.JobHandle ScheduleWriteComponentDataJobs(Unity.Jobs.JobHandle inputDeps);
    }

    public enum BlendingMode
    {
        public const Unity.Animation.BlendingMode Additive = 1;
        public const Unity.Animation.BlendingMode Override = 0;
        public int value__;
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"a88bd40bda0f4f379831b0c7f023ce6e", 1, @"Animation Core/Blend Trees", @"Evaluates a 1D BlendTree based on a blend parameter", false)] public class BlendTree1DNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.BlendTree1DNode.Data, Unity.Animation.BlendTree1DNode.SimPorts, Unity.Animation.BlendTree1DNode.KernelData, Unity.Animation.BlendTree1DNode.KernelDefs, Unity.Animation.BlendTree1DNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public BlendTree1DNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D> blendTree);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        [Unity.DataFlowGraph.Managed] public struct Data : Unity.DataFlowGraph.INodeData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D> BlendTree;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.BlendTree1DNode.KernelData, Unity.Animation.BlendTree1DNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.BlendTree1DNode.KernelData data, ref Unity.Animation.BlendTree1DNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ec8393afd55d415e9d5768173435fbe3", @"Blend", @"Blend parameter value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.BlendTree1DNode, float> BlendParameter;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"32674ad7efba46ca99072747923cad00", , @"Current motion duration, used to compute normalized time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.BlendTree1DNode, float> Duration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e1d595a425104c32ab36d5a6f51bb53b", , @"Normalized time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.BlendTree1DNode, float> NormalizedTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"75e048a572a44ff6a813a711b9560812", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.BlendTree1DNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"390da22df44642a9b5ad2adaaf83c1a6", , @"BlendTree data", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.BlendTree1DNode, Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D>> BlendTree;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"aa9894ceaa80410296466cda31f6c744", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.BlendTree1DNode, Unity.Animation.Rig> Rig;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9c16a594bbf44b8cb0d4757a37037bb5", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageOutput<Unity.Animation.BlendTree1DNode, Unity.Animation.Rig> RigOut;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"dd965a2ebf994f77ad87f02fce11ce9a", 1, @"Animation Core/Blend Trees", @"Evaluates a 2D BlendTree based on X and Y blend parameters", false)] public class BlendTree2DNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.BlendTree2DNode.Data, Unity.Animation.BlendTree2DNode.SimPorts, Unity.Animation.BlendTree2DNode.KernelData, Unity.Animation.BlendTree2DNode.KernelDefs, Unity.Animation.BlendTree2DNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public BlendTree2DNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional> blendTree);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        [Unity.DataFlowGraph.Managed] public struct Data : Unity.DataFlowGraph.INodeData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional> BlendTree;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.BlendTree2DNode.KernelData, Unity.Animation.BlendTree2DNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.BlendTree2DNode.KernelData data, ref Unity.Animation.BlendTree2DNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"20a3ff3a4a99432783ec25b41830a83b", @"Blend X", @"Blend parameter X value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.BlendTree2DNode, float> BlendParameterX;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ed4275b3425a431ea5e05c3a9e7dc65f", @"Blend Y", @"Blend parameter Y value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.BlendTree2DNode, float> BlendParameterY;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8a3c6c2b60ee493ca8eed9f5488fb39e", , @"Current motion duration, used to compute normalized time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.BlendTree2DNode, float> Duration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6d64e4d8dd1a4574ab065ce67c239a15", , @"Normalized time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.BlendTree2DNode, float> NormalizedTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8279a2f700f14b81bb2f4db467d2fb7a", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.BlendTree2DNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"28cb77b3c65c49fabe33810d9665efa5", , @"BlendTree data", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.BlendTree2DNode, Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional>> BlendTree;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2efe136265d74ee6bf17610df0d2fcbe", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.BlendTree2DNode, Unity.Animation.Rig> Rig;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e0f25365515b4009bcf8f99e8208bc68", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageOutput<Unity.Animation.BlendTree2DNode, Unity.Animation.Rig> RigOut;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"61d4abe4d0d84cae81d9bfde78b9d066", 1, @"Animation Core/Mixers", @"Blends two animation streams given per channel weight values. Weight masks can be built using the WeightBuilderNode.", false)] public class ChannelWeightMixerNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ChannelWeightMixerNode.Data, Unity.Animation.ChannelWeightMixerNode.SimPorts, Unity.Animation.ChannelWeightMixerNode.KernelData, Unity.Animation.ChannelWeightMixerNode.KernelDefs, Unity.Animation.ChannelWeightMixerNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ChannelWeightMixerNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ChannelWeightMixerNode.KernelData, Unity.Animation.ChannelWeightMixerNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.ChannelWeightMixerNode.KernelData data, ref Unity.Animation.ChannelWeightMixerNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8450950e37524046abc3358d307799b7", , @"Input stream 0", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ChannelWeightMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input0;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0ec77f40188a4214951bb2ec027e8915", , @"Input stream 1", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ChannelWeightMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input1;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"5defde9b920a445781873403d363b93a", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ChannelWeightMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"aba316c6e62b4d58af903dbe9d6b57ad", , @"Blend weight that applies to all channels", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ChannelWeightMixerNode, float> Weight;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"33f6be8416f74339bcbf36e9d10bb132", , @"Channel specific weights which are also modulated by input Weight", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ChannelWeightMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.WeightData>> WeightMasks;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"acd8325eb6134d27b54ccb0a13aa7c8e", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ChannelWeightMixerNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    public struct ClipConfiguration
    {
        public Unity.Animation.ClipConfigurationMask Mask;
        public Unity.Animation.StringHash MotionID;
    }

    [System.Flags] public enum ClipConfigurationMask
    {
        public const Unity.Animation.ClipConfigurationMask BankPivot = 64;
        public const Unity.Animation.ClipConfigurationMask CycleRootMotion = 8;
        public const Unity.Animation.ClipConfigurationMask DeltaRootMotion = 16;
        public const Unity.Animation.ClipConfigurationMask LoopTime = 2;
        public const Unity.Animation.ClipConfigurationMask LoopValues = 4;
        public const Unity.Animation.ClipConfigurationMask NormalizedTime = 1;
        public const Unity.Animation.ClipConfigurationMask RootMotionFromVelocity = 32;
        public int value__;
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"9b734ccaddd64c97af0b4b5800866db7", 1, @"Animation Core", @"Base clip sampling node", true)] public class ClipNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ClipNode.Data, Unity.Animation.ClipNode.SimPorts, Unity.Animation.ClipNode.KernelData, Unity.Animation.ClipNode.KernelDefs, Unity.Animation.ClipNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<bool>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.Clip>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ClipNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref bool msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.Clip> clip);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ClipNode.KernelData, Unity.Animation.ClipNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.ClipNode.KernelData data, ref Unity.Animation.ClipNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int Additive;
            public Unity.Entities.BlobAssetReference<Unity.Animation.Clip> Clip;
            public Unity.Entities.BlobAssetReference<Unity.Animation.ClipInstance> ClipInstance;
            public Unity.Profiling.ProfilerMarker ProfileSampleClip;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"fea8f40f69f547f398fbbdd207ded282", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ClipNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ab9fd996e02344f78a35c6d86f1f1078", , @"Sample time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ClipNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a0bc2d799f8943359c152b7bcdc1a6f7", , @"Is this an additive clip", false, -1, false, 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipNode, bool> Additive;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e02fe9c080db472bb0a3fa31d9042924", , @"The clip asset to sample", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipNode, Unity.Entities.BlobAssetReference<Unity.Animation.Clip>> Clip;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d00cef2e74b84e73a076e63aa020dff0", , @"Clip duration", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageOutput<Unity.Animation.ClipNode, float> Duration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ae9c16733c7c4aa1af6f153da7416e77", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"6e6e48c0c4c84663999acbb0d491ce79", 1, @"Animation Core", @"Evaluates an animation clip given a clip configuration and time value", false)] public class ClipPlayerNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ClipPlayerNode.Data, Unity.Animation.ClipPlayerNode.SimPorts, Unity.Animation.ClipPlayerNode.KernelData, Unity.Animation.ClipPlayerNode.KernelDefs, Unity.Animation.ClipPlayerNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<bool>, Unity.DataFlowGraph.IMsgHandler<float>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.ClipConfiguration>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.Clip>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ClipPlayerNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref bool msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref float msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.ClipConfiguration msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.Clip> clip);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ClipPlayerNode.KernelData, Unity.Animation.ClipPlayerNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.ClipPlayerNode.KernelData data, ref Unity.Animation.ClipPlayerNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"51283be210a94c1a8e0b78f1ac7f2ef4", , @"Delta time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ClipPlayerNode, float> DeltaTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8d62299023174e0dad6394c6065d0b49", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ClipPlayerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2d24fba28ea14bd7bbe8568026579ed9", @"Time scale", @"Delta time scale factor", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ClipPlayerNode, float> Speed;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"5f1665002b224c16a5c85bd8ebe31c62", , @"Is an additive clip", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipPlayerNode, bool> Additive;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d54d5e84fe9c41c98e7884cdb38d3cdb", , @"Clip to sample", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipPlayerNode, Unity.Entities.BlobAssetReference<Unity.Animation.Clip>> Clip;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3564fb2d5d474e8f8f263788acc915d7", , @"Clip configuration data", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipPlayerNode, Unity.Animation.ClipConfiguration> Configuration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"bd18527f905e42958967f3209e3e2749", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipPlayerNode, Unity.Animation.Rig> Rig;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"dc9fbabe48b449b283ab713cd9149718", , @"Time to sample the clip at", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ClipPlayerNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"aac0d8d10f594218aa77961604da05e2", 1, @"Animation Core/Blend Trees", @"Computes 1D BlendTree weights based on parameter input", true)] public class ComputeBlendTree1DWeightsNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ComputeBlendTree1DWeightsNode.Data, Unity.Animation.ComputeBlendTree1DWeightsNode.SimPorts, Unity.Animation.ComputeBlendTree1DWeightsNode.KernelData, Unity.Animation.ComputeBlendTree1DWeightsNode.KernelDefs, Unity.Animation.ComputeBlendTree1DWeightsNode.Kernel>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D>>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ComputeBlendTree1DWeightsNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D> blendTree);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ComputeBlendTree1DWeightsNode.KernelData, Unity.Animation.ComputeBlendTree1DWeightsNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.ComputeBlendTree1DWeightsNode.KernelData data, ref Unity.Animation.ComputeBlendTree1DWeightsNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D> BlendTree;
            public Unity.Profiling.ProfilerMarker ProfileMarker;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9eafced4b7074559aa0af1ee256120e3", , @"Blend parameter value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ComputeBlendTree1DWeightsNode, float> BlendParameter;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"31b3a792162f47a2ba5e670c2ebf6399", , @"Current motion duration", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ComputeBlendTree1DWeightsNode, float> Duration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2dcc708d7e114a21a16b3b439a095f87", @"Motion Duration", @"Duration of each motion used by this BlendTree", false, -1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.ComputeBlendTree1DWeightsNode, float>> MotionDurations;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e6cab610f6ec45189aa698b773e673ba", , @"Resulting motion weights, size of buffer is equal to the amount of motions", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ComputeBlendTree1DWeightsNode, Unity.DataFlowGraph.Buffer<float>> Weights;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6195a5fe9d5642469dc78d2efb5fbde6", , @"BlendTree 1D properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ComputeBlendTree1DWeightsNode, Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree1D>> BlendTree;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"79412b5295e542daad10167c1b418522", 1, @"Animation Core/Blend Trees", @"Computes 2D BlendTree weights based on parameter input", true)] public class ComputeBlendTree2DWeightsNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ComputeBlendTree2DWeightsNode.Data, Unity.Animation.ComputeBlendTree2DWeightsNode.SimPorts, Unity.Animation.ComputeBlendTree2DWeightsNode.KernelData, Unity.Animation.ComputeBlendTree2DWeightsNode.KernelDefs, Unity.Animation.ComputeBlendTree2DWeightsNode.Kernel>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional>>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ComputeBlendTree2DWeightsNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional> blendTree);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ComputeBlendTree2DWeightsNode.KernelData, Unity.Animation.ComputeBlendTree2DWeightsNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.ComputeBlendTree2DWeightsNode.KernelData data, ref Unity.Animation.ComputeBlendTree2DWeightsNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional> BlendTree;
            public Unity.Profiling.ProfilerMarker ProfileMarker;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"5db3565dc5a148f0acf662ae66c0a1d9", , @"Blend parameter X value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ComputeBlendTree2DWeightsNode, float> BlendParameterX;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"87fd5d8fe6ba44b9ae86d5d7bf680ca0", , @"Blend parameter Y value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ComputeBlendTree2DWeightsNode, float> BlendParameterY;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"263544bcaef14db5982111b2ca206e2a", , @"Current motion duration", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ComputeBlendTree2DWeightsNode, float> Duration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e2ce9ea098cc422b9daa5fddd9e03c71", @"Motion Duration", @"Duration of each motion used by this BlendTree", false, -1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.ComputeBlendTree2DWeightsNode, float>> MotionDurations;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0c799b1077314f9b819c960b8c2039cb", , @"Resulting motion weights, size of buffer is equal to the amount of motions", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ComputeBlendTree2DWeightsNode, Unity.DataFlowGraph.Buffer<float>> Weights;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"de45bb03e06142c1bd27361e890369fd", , @"BlendTree 2D properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ComputeBlendTree2DWeightsNode, Unity.Entities.BlobAssetReference<Unity.Animation.BlendTree2DSimpleDirectional>> BlendTree;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"792256a71ac546709adf975eed81325f", 1, @"Animation Core", @"Evaluates a clip based on the clip configuration mask", true)] public class ConfigurableClipNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ConfigurableClipNode.Data, Unity.Animation.ConfigurableClipNode.SimPorts, Unity.Animation.ConfigurableClipNode.KernelData, Unity.Animation.ConfigurableClipNode.KernelDefs, Unity.Animation.ConfigurableClipNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<bool>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.ClipConfiguration>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.Clip>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ConfigurableClipNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref bool msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.ClipConfiguration msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.Clip> clip);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.Clip> Clip;
            public bool IsAdditive;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConfigurableClipNode.KernelData, Unity.Animation.ConfigurableClipNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.ConfigurableClipNode.KernelData data, ref Unity.Animation.ConfigurableClipNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"95f138d338bd4db1a0717e28f667df46", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ConfigurableClipNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6da950f7ac294fc1a867e8a3923d5345", , @"Unbound time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ConfigurableClipNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"97417cbc0ad5408bba9a9a1a10603ca0", , @"Is this an additive clip", false, -1, false, 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ConfigurableClipNode, bool> Additive;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f2efaeb1e1684f218c329edf87ee8517", , @"Clip to sample", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ConfigurableClipNode, Unity.Entities.BlobAssetReference<Unity.Animation.Clip>> Clip;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2f01ade105d14c2ea42217b644bcea25", , @"Clip configuration data", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ConfigurableClipNode, Unity.Animation.ClipConfiguration> Configuration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"5040b6577c8c43458d62bda53ec0cc6d", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ConfigurableClipNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"5dfe97a8553f4bfda4b0c34d402bac6f", 1, @"Animation Core/Utils", @"Convert float4x4 to LocalToParent component data", false)] public class ConvertFloat4x4ToLocalToParentComponentNode : Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToParent, Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ConvertFloat4x4ToLocalToParentComponentNode() {}
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToParent, Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode.Kernel>, Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToParent, Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode.Kernel>>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToParent, Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode.Kernel> data, ref Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToParent, Unity.Animation.ConvertFloat4x4ToLocalToParentComponentNode.Kernel> ports);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"480f20d38700437ca3e14d84df2d17ce", 1, @"Animation Core/Utils", @"Convert float4x4 to LocalToWorld component data", false)] public class ConvertFloat4x4ToLocalToWorldComponentNode : Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToWorld, Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ConvertFloat4x4ToLocalToWorldComponentNode() {}
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToWorld, Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode.Kernel>, Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToWorld, Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode.Kernel>>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToWorld, Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode.Kernel> data, ref Unity.Animation.ConvertToBase<Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode, Unity.Mathematics.float4x4, Unity.Transforms.LocalToWorld, Unity.Animation.ConvertFloat4x4ToLocalToWorldComponentNode.Kernel> ports);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"67bf8870034243748508842af9371eac", 1, @"Animation Core/Utils", @"Convert LocalToParent component data to float4x4", false)] public class ConvertLocalToParentComponentToFloat4x4Node : Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node, Unity.Transforms.LocalToParent, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ConvertLocalToParentComponentToFloat4x4Node() {}
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node, Unity.Transforms.LocalToParent, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node.Kernel>, Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node, Unity.Transforms.LocalToParent, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node.Kernel>>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node, Unity.Transforms.LocalToParent, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node.Kernel> data, ref Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node, Unity.Transforms.LocalToParent, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToParentComponentToFloat4x4Node.Kernel> ports);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"d63631dce8c8482094f0977358f86628", 1, @"Animation Core/Utils", @"Convert LocalToWorld component data to float4x4", false)] public class ConvertLocalToWorldComponentToFloat4x4Node : Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node, Unity.Transforms.LocalToWorld, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ConvertLocalToWorldComponentToFloat4x4Node() {}
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node, Unity.Transforms.LocalToWorld, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node.Kernel>, Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node, Unity.Transforms.LocalToWorld, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node.Kernel>>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node, Unity.Transforms.LocalToWorld, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node.Kernel> data, ref Unity.Animation.ConvertToBase<Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node, Unity.Transforms.LocalToWorld, Unity.Mathematics.float4x4, Unity.Animation.ConvertLocalToWorldComponentToFloat4x4Node.Kernel> ports);
        }
    }

    public abstract class ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel> : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, TKernel> where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where TInput : System.ValueType, new() where TOutput : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>>, new()
    {
        protected ConvertToBase() {}
        public struct SimPorts<TFinalNodeDefinition, TInput, TOutput, TKernel> : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where TInput : System.ValueType, new() where TOutput : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>>, new()
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct KernelDefs<TFinalNodeDefinition, TInput, TOutput, TKernel> : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where TInput : System.ValueType, new() where TOutput : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>>, new()
        {
            public Unity.DataFlowGraph.DataInput<TFinalNodeDefinition, TInput> Input;
            public Unity.DataFlowGraph.DataOutput<TFinalNodeDefinition, TOutput> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct Data<TFinalNodeDefinition, TInput, TOutput, TKernel> : Unity.DataFlowGraph.INodeData where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where TInput : System.ValueType, new() where TOutput : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>>, new()
        {
        }
        public struct KernelData<TFinalNodeDefinition, TInput, TOutput, TKernel> : Unity.DataFlowGraph.IKernelData where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where TInput : System.ValueType, new() where TOutput : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>, Unity.Animation.ConvertToBase<TFinalNodeDefinition, TInput, TOutput, TKernel>>, new()
        {
            public Unity.DataFlowGraph.DataInput<TFinalNodeDefinition, TInput> Input;
            public Unity.DataFlowGraph.DataOutput<TFinalNodeDefinition, TOutput> Output;
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"147518e22e1c492ab58d348c8a60a0ff", 1, @"Animation Core/Root Motion", @"Computes and sets the total root motion offset amount based on the number of cycles for a given clip. This node is internally used by the UberClipNode.", false)] public class CycleRootMotionNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.CycleRootMotionNode.Data, Unity.Animation.CycleRootMotionNode.SimPorts, Unity.Animation.CycleRootMotionNode.KernelData, Unity.Animation.CycleRootMotionNode.KernelDefs, Unity.Animation.CycleRootMotionNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public CycleRootMotionNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.CycleRootMotionNode.KernelData, Unity.Animation.CycleRootMotionNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.CycleRootMotionNode.KernelData data, ref Unity.Animation.CycleRootMotionNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f3875741d6e74043b55c0bfe2889efcd", , @"Clip cycle count", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.CycleRootMotionNode, int> Cycle;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9a3bd2dae1aa4432805d64fe535a953e", , @"The current animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.CycleRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"72914f27b609451bbe91432e44319c0f", , @"Resulting animation stream with updated root motion values", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.CycleRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"72dd27ce795844129161fd037ae6c018", , @"Animation stream at the start of the clip, when t = 0", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.CycleRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Start;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7968d4d4eb3642d5a424524ac6e396c9", , @"Animation stream at the end of the clip, when t = duration", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.CycleRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Stop;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"98d02bd676584f3ba67f8d116d66260e", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.CycleRootMotionNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"6db594d74f974544a51bbdb5c987f869", 1, @"Animation Core/Utils", @"Outputs the default values of a RigDefinition as an animation stream (i.e. the bind pose)", false)] public class DefaultValuesNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.DefaultValuesNode.Data, Unity.Animation.DefaultValuesNode.SimPorts, Unity.Animation.DefaultValuesNode.KernelData, Unity.Animation.DefaultValuesNode.KernelDefs, Unity.Animation.DefaultValuesNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public DefaultValuesNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.DefaultValuesNode.KernelData, Unity.Animation.DefaultValuesNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.DefaultValuesNode.KernelData data, ref Unity.Animation.DefaultValuesNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1568359a111d43eabf7c782912bdcc78", , @"Default stream values", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.DefaultValuesNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6c011cf806dd48509bba003c96636ae7", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.DefaultValuesNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"fd66a28a123c416a9860c6e090650266", 1, @"Animation Core/Utils", @"Computes the delta animation stream given two input streams", false)] public class DeltaPoseNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.DeltaPoseNode.Data, Unity.Animation.DeltaPoseNode.SimPorts, Unity.Animation.DeltaPoseNode.KernelData, Unity.Animation.DeltaPoseNode.KernelDefs, Unity.Animation.DeltaPoseNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public DeltaPoseNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.AddPoseNode> AddNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.InversePoseNode> InverseNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.SimPassThroughNode<Unity.Animation.Rig>> RigNode;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.DeltaPoseNode.KernelData, Unity.Animation.DeltaPoseNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.DeltaPoseNode.KernelData data, ref Unity.Animation.DeltaPoseNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f6827edbb1414f7aa286e2886447ab77", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.DeltaPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2364845e84e147328da308491cd5b4bd", , @"Resulting delta stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.DeltaPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6cc739a7f24f4b9db9e4b39e399c900f", , @"Stream to subtract", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.DeltaPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Subtract;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7e89282e80fa40619ea8e2e3426ab9b7", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.DeltaPoseNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"0d7b1e6e91364decbb7284a9014ebbce", 1, @"Animation Core/Root Motion", @"Computes the delta root motion from a previous and current animation stream. This node is internally used by the UberClipNode.", false)] public class DeltaRootMotionNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.DeltaRootMotionNode.Data, Unity.Animation.DeltaRootMotionNode.SimPorts, Unity.Animation.DeltaRootMotionNode.KernelData, Unity.Animation.DeltaRootMotionNode.KernelDefs, Unity.Animation.DeltaRootMotionNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public DeltaRootMotionNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.DeltaRootMotionNode.KernelData, Unity.Animation.DeltaRootMotionNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.DeltaRootMotionNode.KernelData data, ref Unity.Animation.DeltaRootMotionNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0d6c7a4cfeec4974ac5cc5561a5a72e7", , @"Current animation stream with root motion", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.DeltaRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Current;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1360ef37a50a4942a87fd07f5c0fb2cd", , @"Resulting animation stream with updated delta root motion values", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.DeltaRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c5b993e40ed84ce088ed1e0656c5d12c", , @"Previous animation stream with root motion", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.DeltaRootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Previous;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e9eb8fd87a844058a675a311bd9b641a", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.DeltaRootMotionNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"9f614062d66a439f9a7070de6b880b93", 1, @"Animation Core/Time", @"Computes delta time", false)] public class DeltaTimeNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.DeltaTimeNode.Data, Unity.Animation.DeltaTimeNode.SimPorts, Unity.Animation.DeltaTimeNode.KernelData, Unity.Animation.DeltaTimeNode.KernelDefs, Unity.Animation.DeltaTimeNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public DeltaTimeNode() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        protected virtual void OnUpdate(Unity.DataFlowGraph.UpdateContext& modreq(System.Runtime.InteropServices.InAttribute) ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.DeltaTimeNode.KernelData, Unity.Animation.DeltaTimeNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.DeltaTimeNode.KernelData data, ref Unity.Animation.DeltaTimeNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public float DeltaTime;
            public Unity.Profiling.ProfilerMarker ProfileDeltaTime;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"15abad4f4f924fd9a18ee7ea014b03b7", , @"Delta time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.DeltaTimeNode, float> DeltaTime;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    public static class DFGUtils
    {
        public static Unity.Collections.NativeArray<Unity.Animation.AnimatedData> GetGraphValueTempNativeBuffer(Unity.DataFlowGraph.NodeSet set, Unity.DataFlowGraph.GraphValue<Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> graphValueBuffer);
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"7e669400e5a54932a5cbfd21ef5ec64a", 1, @"Animation Core", @"Samples an AnimationCurve at a given time", false)] public class EvaluateCurveNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.EvaluateCurveNode.Data, Unity.Animation.EvaluateCurveNode.SimPorts, Unity.Animation.EvaluateCurveNode.KernelData, Unity.Animation.EvaluateCurveNode.KernelDefs, Unity.Animation.EvaluateCurveNode.Kernel>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.AnimationCurve>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public EvaluateCurveNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.AnimationCurve curve);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.EvaluateCurveNode.KernelData, Unity.Animation.EvaluateCurveNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.EvaluateCurveNode.KernelData data, ref Unity.Animation.EvaluateCurveNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Animation.AnimationCurve AnimationCurve;
            public Unity.Profiling.ProfilerMarker ProfileMarker;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"38e583f3a02b44da9a5d2efc72981767", , @"Curve value at given time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.EvaluateCurveNode, float> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"b2e7e6a9a5f445d9a30562b665cf3420", , @"Sample time", false, -1, 0, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.EvaluateCurveNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a28d3cca5864417d91350f603503a984", , @"The AnimationCurve to sample", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.EvaluateCurveNode, Unity.Animation.AnimationCurve> AnimationCurve;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"92bf06d2ddbf4b4ba0bd3cf610f1f4e6", 1, @"", @"", true)] public class FloatAddNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.FloatAddNode.Data, Unity.Animation.FloatAddNode.SimPorts, Unity.Animation.FloatAddNode.KernelData, Unity.Animation.FloatAddNode.KernelDefs, Unity.Animation.FloatAddNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public FloatAddNode() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.FloatAddNode.KernelData, Unity.Animation.FloatAddNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.FloatAddNode.KernelData data, ref Unity.Animation.FloatAddNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileFloatAdd;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatAddNode, float> InputA;
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatAddNode, float> InputB;
            public Unity.DataFlowGraph.DataOutput<Unity.Animation.FloatAddNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"0df2a515c02040f28f0f30fff4653b6e", 1, @"", @"", true)] public class FloatMulNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.FloatMulNode.Data, Unity.Animation.FloatMulNode.SimPorts, Unity.Animation.FloatMulNode.KernelData, Unity.Animation.FloatMulNode.KernelDefs, Unity.Animation.FloatMulNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public FloatMulNode() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.FloatMulNode.KernelData, Unity.Animation.FloatMulNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.FloatMulNode.KernelData data, ref Unity.Animation.FloatMulNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileFloatMul;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatMulNode, float> InputA;
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatMulNode, float> InputB;
            public Unity.DataFlowGraph.DataOutput<Unity.Animation.FloatMulNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"9663c48edb9446789059aaf3b0d0068c", 1, @"", @"", true)] public class FloatRcpNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.FloatRcpNode.Data, Unity.Animation.FloatRcpNode.SimPorts, Unity.Animation.FloatRcpNode.KernelData, Unity.Animation.FloatRcpNode.KernelDefs, Unity.Animation.FloatRcpNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public FloatRcpNode() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.FloatRcpNode.KernelData, Unity.Animation.FloatRcpNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.FloatRcpNode.KernelData data, ref Unity.Animation.FloatRcpNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatRcpNode, float> Input;
            public Unity.DataFlowGraph.DataOutput<Unity.Animation.FloatRcpNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"e3250beaaf4e498ea3a0fa0cdecd47f3", 1, @"", @"", true)] public class FloatRcpSimNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.FloatRcpSimNode.Data, Unity.Animation.FloatRcpSimNode.SimPorts>, Unity.DataFlowGraph.IMsgHandler<float>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public FloatRcpSimNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref float msg);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public Unity.DataFlowGraph.MessageInput<Unity.Animation.FloatRcpSimNode, float> Input;
            public Unity.DataFlowGraph.MessageOutput<Unity.Animation.FloatRcpSimNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"27c8103da3474303893705dccba909bf", 1, @"", @"", true)] public class FloatSubNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.FloatSubNode.Data, Unity.Animation.FloatSubNode.SimPorts, Unity.Animation.FloatSubNode.KernelData, Unity.Animation.FloatSubNode.KernelDefs, Unity.Animation.FloatSubNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public FloatSubNode() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.FloatSubNode.KernelData, Unity.Animation.FloatSubNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.FloatSubNode.KernelData data, ref Unity.Animation.FloatSubNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileFloatSub;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatSubNode, float> InputA;
            public Unity.DataFlowGraph.DataInput<Unity.Animation.FloatSubNode, float> InputB;
            public Unity.DataFlowGraph.DataOutput<Unity.Animation.FloatSubNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"559f48b3f95f4facb346a1738b028792", 1, @"Animation Core/Utils", @"Gets a float value from the AnimationStream", false)] public class GetAnimationStreamFloatNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.GetAnimationStreamFloatNode.Data, Unity.Animation.GetAnimationStreamFloatNode.SimPorts, Unity.Animation.GetAnimationStreamFloatNode.KernelData, Unity.Animation.GetAnimationStreamFloatNode.KernelDefs, Unity.Animation.GetAnimationStreamFloatNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public GetAnimationStreamFloatNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.GetAnimationStreamFloatNode.KernelData, Unity.Animation.GetAnimationStreamFloatNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.GetAnimationStreamFloatNode.KernelData data, ref Unity.Animation.GetAnimationStreamFloatNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2a4bcdce5d9849ad826897c44992d297", , @"Index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamFloatNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"5cceb8478b6f48908dfe909b6a95896f", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamFloatNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"47114a90a5fc4a8995959c8f8ea75865", , @"Value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamFloatNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"753f33bf35ba4093bfda46a882526f4c", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.GetAnimationStreamFloatNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"ad8ef6033fd64cff8c1bbcb0b2b30291", 1, @"Animation Core/Utils", @"Gets an integer value from the AnimationStream", false)] public class GetAnimationStreamIntNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.GetAnimationStreamIntNode.Data, Unity.Animation.GetAnimationStreamIntNode.SimPorts, Unity.Animation.GetAnimationStreamIntNode.KernelData, Unity.Animation.GetAnimationStreamIntNode.KernelDefs, Unity.Animation.GetAnimationStreamIntNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public GetAnimationStreamIntNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.GetAnimationStreamIntNode.KernelData, Unity.Animation.GetAnimationStreamIntNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.GetAnimationStreamIntNode.KernelData data, ref Unity.Animation.GetAnimationStreamIntNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"b7a6a3c6e69d44139c8957a3e4f67e62", , @"Index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamIntNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"115d1c89a20249d29320e2c48f12a55f", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamIntNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"46dbcf94d6944c66b53d296597fdf75d", , @"Value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamIntNode, int> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"40137712b11041f79fd9dd1267ed0cbc", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.GetAnimationStreamIntNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"207a2a8e462e4792969396869af3c382", 1, @"Animation Core/Utils", @"Gets the local to parent information of a bone in the AnimationStream", false)] public class GetAnimationStreamLocalToParentNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.GetAnimationStreamLocalToParentNode.Data, Unity.Animation.GetAnimationStreamLocalToParentNode.SimPorts, Unity.Animation.GetAnimationStreamLocalToParentNode.KernelData, Unity.Animation.GetAnimationStreamLocalToParentNode.KernelDefs, Unity.Animation.GetAnimationStreamLocalToParentNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public GetAnimationStreamLocalToParentNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.GetAnimationStreamLocalToParentNode.KernelData, Unity.Animation.GetAnimationStreamLocalToParentNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.GetAnimationStreamLocalToParentNode.KernelData data, ref Unity.Animation.GetAnimationStreamLocalToParentNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"49a3863112204790842b906d44900dec", , @"Bone index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamLocalToParentNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"944ef56f25ca4554a501cb52b3305c83", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamLocalToParentNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"dc4a5b68c0834fc6937e85c43e2975ee", , @"Local to parent rotation", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToParentNode, Unity.Mathematics.quaternion> Rotation;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"dccfc0d90fc9470683597f2ef7b54bef", , @"Local to parent scale", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToParentNode, Unity.Mathematics.float3> Scale;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8b36e749b18540298133e86302da6a66", , @"Local to parent transform", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToParentNode, Unity.Mathematics.float4x4> Transform;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4b3278258ce14e5b822a905fe30ccb85", , @"Local to parent translation", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToParentNode, Unity.Mathematics.float3> Translation;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1490ecf735fd471a8dbda4daa4d8f41b", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.GetAnimationStreamLocalToParentNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"1c0e9a16f02c4635a006534424e0c7b1", 2, @"Animation Core/Utils", @"Gets the local to root information of a bone in the AnimationStream", false)] public class GetAnimationStreamLocalToRootNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.GetAnimationStreamLocalToRootNode.Data, Unity.Animation.GetAnimationStreamLocalToRootNode.SimPorts, Unity.Animation.GetAnimationStreamLocalToRootNode.KernelData, Unity.Animation.GetAnimationStreamLocalToRootNode.KernelDefs, Unity.Animation.GetAnimationStreamLocalToRootNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public GetAnimationStreamLocalToRootNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.GetAnimationStreamLocalToRootNode.KernelData, Unity.Animation.GetAnimationStreamLocalToRootNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.GetAnimationStreamLocalToRootNode.KernelData data, ref Unity.Animation.GetAnimationStreamLocalToRootNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3b815effbee14709a0f4b316c836f7ec", , @"Bone index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamLocalToRootNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a15a6ac083264ad2aa2501bb0dbb06ee", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetAnimationStreamLocalToRootNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"bc3ebb4f4c7b41bc8e5d781c4edfcef9", , @"Local to root rotation", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToRootNode, Unity.Mathematics.quaternion> Rotation;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3ef7495177374ac19c0f749d6612b6cc", , @"Local to root scale", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToRootNode, Unity.Mathematics.float3> Scale;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1be1089afbe644b999c11b8c87ad1f44", , @"Local to root transform", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToRootNode, Unity.Mathematics.float4x4> Transform;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ba1673240b7f45e68ea2d2c264178432", , @"Local to root translation", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetAnimationStreamLocalToRootNode, Unity.Mathematics.float3> Translation;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"13209707a0294832a191b8f64f68e63e", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.GetAnimationStreamLocalToRootNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"be1a7512286b41479d93a3e4e1db9534", 1, @"Animation Core/Utils", @"Gets a value given an index from a buffer", false)] public class GetBufferElementValueNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.GetBufferElementValueNode.Data, Unity.Animation.GetBufferElementValueNode.SimPorts, Unity.Animation.GetBufferElementValueNode.KernelData, Unity.Animation.GetBufferElementValueNode.KernelDefs, Unity.Animation.GetBufferElementValueNode.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public GetBufferElementValueNode() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.GetBufferElementValueNode.KernelData, Unity.Animation.GetBufferElementValueNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.GetBufferElementValueNode.KernelData data, ref Unity.Animation.GetBufferElementValueNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f58169dc597a4d788909b525a723496e", , @"Index in buffer", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetBufferElementValueNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"bfb9c7c192af4e0b9e01a20ae9de6713", , @"Input buffer", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.GetBufferElementValueNode, Unity.DataFlowGraph.Buffer<float>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"28cb77b3c65c49fabe33810d9665efa5", , @"Value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.GetBufferElementValueNode, float> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    public struct GraphHandle : System.IEquatable<Unity.Animation.GraphHandle>
    {
        public virtual bool Equals(object obj);
        public virtual bool Equals(Unity.Animation.GraphHandle other);
        public virtual int GetHashCode();
        public static bool operator ==(Unity.Animation.GraphHandle lhs, Unity.Animation.GraphHandle rhs);
        public static bool operator !=(Unity.Animation.GraphHandle lhs, Unity.Animation.GraphHandle rhs);
    }

    public interface IAnimationSystem
    {
        public abstract int RefCount { get; }
        public abstract Unity.DataFlowGraph.NodeSet Set { get; }
        public abstract void AddRef();
        public abstract Unity.Animation.GraphHandle CreateGraph();
        public abstract Unity.DataFlowGraph.NodeHandle<T> CreateNode<T>(Unity.Animation.GraphHandle graph) where T : Unity.DataFlowGraph.NodeDefinition, new();
        public abstract Unity.DataFlowGraph.NodeHandle<Unity.DataFlowGraph.ComponentNode> CreateNode(Unity.Animation.GraphHandle graph, Unity.Entities.Entity entity);
        public abstract void Dispose(Unity.Animation.GraphHandle graph);
        public abstract void RemoveRef();
    }

    public interface IAnimationSystem<TTag> : Unity.Animation.IAnimationSystem where TTag : System.ValueType, Unity.Animation.IAnimationSystemTag, new()
    {
        public abstract TTag TagComponent { get; }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"d02f3e16b7044fcd9acd09adf22f2a30", 1, @"Animation Core/Root Motion", @"Extracts motion from a specified transform and projects it's values on the root transform. This node is internally used by the UberClipNode.", false)] public class InPlaceMotionNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.InPlaceMotionNode.Data, Unity.Animation.InPlaceMotionNode.SimPorts, Unity.Animation.InPlaceMotionNode.KernelData, Unity.Animation.InPlaceMotionNode.KernelDefs, Unity.Animation.InPlaceMotionNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.ClipConfiguration>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public InPlaceMotionNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.ClipConfiguration msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.InPlaceMotionNode.KernelData, Unity.Animation.InPlaceMotionNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.InPlaceMotionNode.KernelData data, ref Unity.Animation.InPlaceMotionNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Animation.ClipConfiguration Configuration;
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
            public int RotationIndex;
            public int TranslationIndex;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"b9bdb0c630ec4b42873e20447bd74bb1", , @"The current animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.InPlaceMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a20f24488e7b400abef60bdf1365b91e", , @"Resulting animation stream with updated root transform", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.InPlaceMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"71fecbce80b4477ebf85c2b0f13dce8b", , @"Clip configuration mask", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.InPlaceMotionNode, Unity.Animation.ClipConfiguration> Configuration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"df8397b840e1401ca4884771eaf7d90f", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.InPlaceMotionNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"e5053e4830af45c6aabd999397d54a3b", 1, @"Animation Core/Utils", @"Computes the inverse animation stream", false)] public class InversePoseNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.InversePoseNode.Data, Unity.Animation.InversePoseNode.SimPorts, Unity.Animation.InversePoseNode.KernelData, Unity.Animation.InversePoseNode.KernelDefs, Unity.Animation.InversePoseNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public InversePoseNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.InversePoseNode.KernelData, Unity.Animation.InversePoseNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.InversePoseNode.KernelData data, ref Unity.Animation.InversePoseNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"232062db78b240dca4b1390b5d0e7133", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.InversePoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"235370092edd4f1eb0ffdcadb9f20885", , @"Resulting inversed stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.InversePoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6aed15c49e5041a098049f831fe80163", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.InversePoseNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    public interface IRigContextHandler : Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
    }

    public abstract class KernelPassThroughNode<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, TKernel> where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>>, new()
    {
        protected KernelPassThroughNode() {}
        public struct SimPorts<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>>, new()
        {
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct KernelDefs<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>>, new()
        {
            public Unity.DataFlowGraph.DataInput<TFinalNodeDefinition, T> Input;
            public Unity.DataFlowGraph.DataOutput<TFinalNodeDefinition, T> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct Data<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.INodeData where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>>, new()
        {
        }
        public struct KernelData<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.IKernelData where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNode<TFinalNodeDefinition, T, TKernel>>, new()
        {
            public Unity.Profiling.ProfilerMarker ProfilePassThrough;
        }
    }

    public abstract class KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, TKernel>, Unity.DataFlowGraph.IMsgHandler<int> where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition, Unity.DataFlowGraph.IMsgHandler<int> where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>>, new()
    {
        protected KernelPassThroughNodeBuffer() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref int msg);
        public struct SimPorts<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition, Unity.DataFlowGraph.IMsgHandler<int> where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>>, new()
        {
            public Unity.DataFlowGraph.MessageInput<TFinalNodeDefinition, int> BufferSize;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct KernelDefs<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition, Unity.DataFlowGraph.IMsgHandler<int> where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>>, new()
        {
            public Unity.DataFlowGraph.DataInput<TFinalNodeDefinition, Unity.DataFlowGraph.Buffer<T>> Input;
            public Unity.DataFlowGraph.DataOutput<TFinalNodeDefinition, Unity.DataFlowGraph.Buffer<T>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct Data<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.INodeData where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition, Unity.DataFlowGraph.IMsgHandler<int> where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>>, new()
        {
        }
        public struct KernelData<TFinalNodeDefinition, T, TKernel> : Unity.DataFlowGraph.IKernelData where TFinalNodeDefinition : Unity.DataFlowGraph.NodeDefinition, Unity.DataFlowGraph.IMsgHandler<int> where T : System.ValueType, new() where TKernel : System.ValueType, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>, Unity.Animation.KernelPassThroughNodeBuffer<TFinalNodeDefinition, T, TKernel>>, new()
        {
            public Unity.Profiling.ProfilerMarker ProfilePassThrough;
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"d998849d1bc04708acf7e23da56c0a87", 1, @"", @"", true)] public class KernelPassThroughNodeBufferFloat : Unity.Animation.KernelPassThroughNodeBuffer<Unity.Animation.KernelPassThroughNodeBufferFloat, Unity.Animation.AnimatedData, Unity.Animation.KernelPassThroughNodeBufferFloat.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public KernelPassThroughNodeBufferFloat() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNodeBuffer<Unity.Animation.KernelPassThroughNodeBufferFloat, Unity.Animation.AnimatedData, Unity.Animation.KernelPassThroughNodeBufferFloat.Kernel>, Unity.Animation.KernelPassThroughNodeBuffer<Unity.Animation.KernelPassThroughNodeBufferFloat, Unity.Animation.AnimatedData, Unity.Animation.KernelPassThroughNodeBufferFloat.Kernel>>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.KernelPassThroughNodeBuffer<Unity.Animation.KernelPassThroughNodeBufferFloat, Unity.Animation.AnimatedData, Unity.Animation.KernelPassThroughNodeBufferFloat.Kernel> data, ref Unity.Animation.KernelPassThroughNodeBuffer<Unity.Animation.KernelPassThroughNodeBufferFloat, Unity.Animation.AnimatedData, Unity.Animation.KernelPassThroughNodeBufferFloat.Kernel> ports);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"3c094ff41dd2403c81c356e60d66d222", 1, @"", @"", true)] public class KernelPassThroughNodeFloat : Unity.Animation.KernelPassThroughNode<Unity.Animation.KernelPassThroughNodeFloat, float, Unity.Animation.KernelPassThroughNodeFloat.Kernel>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public KernelPassThroughNodeFloat() {}
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.KernelPassThroughNode<Unity.Animation.KernelPassThroughNodeFloat, float, Unity.Animation.KernelPassThroughNodeFloat.Kernel>, Unity.Animation.KernelPassThroughNode<Unity.Animation.KernelPassThroughNodeFloat, float, Unity.Animation.KernelPassThroughNodeFloat.Kernel>>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.KernelPassThroughNode<Unity.Animation.KernelPassThroughNodeFloat, float, Unity.Animation.KernelPassThroughNodeFloat.Kernel> data, ref Unity.Animation.KernelPassThroughNode<Unity.Animation.KernelPassThroughNodeFloat, float, Unity.Animation.KernelPassThroughNodeFloat.Kernel> ports);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"368c53e919534c6f99c0d1b2577e3e2b", 1, @"Animation Core/Mixers", @"Blends animation streams based on an ordered layer approach. Each layer can blend in either override or additive mode. Weight masks can be built using the WeightBuilderNode.", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Number of layers", 1, 2, -1, @"LayerCount")] public class LayerMixerNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.LayerMixerNode.Data, Unity.Animation.LayerMixerNode.SimPorts, Unity.Animation.LayerMixerNode.KernelData, Unity.Animation.LayerMixerNode.KernelDefs, Unity.Animation.LayerMixerNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<System.UInt16>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public LayerMixerNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref System.UInt16 layerCount);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.LayerMixerNode.KernelData, Unity.Animation.LayerMixerNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.LayerMixerNode.KernelData data, ref Unity.Animation.LayerMixerNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int LayerCount;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e47e505bc758484fbbf4f2ccb40710db", @"Blending Mode", @"Type of blending to apply", false, 1, 0, 0, true, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.LayerMixerNode, Unity.Animation.BlendingMode>> BlendingModes;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ac6a07f92da64d109d60c2dc36ba8c74", @"Input", @"Animation stream to blend", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.LayerMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>>> Inputs;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1cccdcd2e0804c578a247871e981f73e", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.LayerMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"22037e358f7549f58680c30a9f5b3fd5", @"Weight Mask", @"Channel specific weights which are also modulated by the layer weight", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.LayerMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.WeightData>>> WeightMasks;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"911ebce1cfed48ecbed487a18ee4b35a", @"Weight", @"Layer weight", false, 1, 1, 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.LayerMixerNode, float>> Weights;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"61f0790526654efd839f0f59bc5bf623", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.LayerMixerNode, System.UInt16> LayerCount;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"78359c86e5bf400cb82958f6e40d2318", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.LayerMixerNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"e995e3e7e5d640e5b6123dfcef20eba7", 1, @"", @"", true)] public class LoopNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.LoopNode.Data, Unity.Animation.LoopNode.SimPorts, Unity.Animation.LoopNode.KernelData, Unity.Animation.LoopNode.KernelDefs, Unity.Animation.LoopNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<int>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public LoopNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref int msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.AddPoseNode> AddNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.KernelPassThroughNodeFloat> DefaultWeightNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.InversePoseNode> InverseNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.SimPassThroughNode<Unity.Animation.Rig>> RigNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.FloatMulNode> RootWeightNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.WeightBuilderNode> WeightChannelsNode;
            public Unity.DataFlowGraph.NodeHandle<Unity.Animation.WeightPoseNode> WeightNode;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.LoopNode.KernelData, Unity.Animation.LoopNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.LoopNode.KernelData data, ref Unity.Animation.LoopNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            public Unity.DataFlowGraph.DataInput<Unity.Animation.LoopNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Delta;
            public Unity.DataFlowGraph.DataInput<Unity.Animation.LoopNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            public Unity.DataFlowGraph.DataInput<Unity.Animation.LoopNode, float> NormalizedTime;
            public Unity.DataFlowGraph.DataOutput<Unity.Animation.LoopNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public Unity.DataFlowGraph.DataInput<Unity.Animation.LoopNode, float> RootWeightMultiplier;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            public Unity.DataFlowGraph.MessageInput<Unity.Animation.LoopNode, Unity.Animation.Rig> Rig;
            public Unity.DataFlowGraph.MessageInput<Unity.Animation.LoopNode, int> SkipRoot;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"fd4af8a57de143148add1ffef327bd73", 1, @"Animation Core/Mixers", @"Blends two animation streams given an input weight value", false)] public class MixerNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.MixerNode.Data, Unity.Animation.MixerNode.SimPorts, Unity.Animation.MixerNode.KernelData, Unity.Animation.MixerNode.KernelDefs, Unity.Animation.MixerNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public MixerNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.MixerNode.KernelData, Unity.Animation.MixerNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.MixerNode.KernelData data, ref Unity.Animation.MixerNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMixPose;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"929d52c8aa744becbaa7cd9cb041c4b9", , @"Input stream 0", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.MixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input0;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ca260edfcfe04ddd8252601b85c4c314", , @"Input stream 1", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.MixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input1;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f9393266c7ed4984afb26bc952b294f6", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.MixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8be16b6cc26742f290ddfb2fc51abbc7", , @"Blend weight", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.MixerNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f77388cf9f22485d924e530a5906cad1", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.MixerNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"6d62b890d24a4b769ae7b9481e017743", 1, @"Animation Core/Mixers", @"Blends N animation streams together given weights per stream", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Number of animation streams", 1, 2, -1, )] public class NMixerNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.NMixerNode.Data, Unity.Animation.NMixerNode.SimPorts, Unity.Animation.NMixerNode.KernelData, Unity.Animation.NMixerNode.KernelDefs, Unity.Animation.NMixerNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public NMixerNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.NMixerNode.KernelData, Unity.Animation.NMixerNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.NMixerNode.KernelData data, ref Unity.Animation.NMixerNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileNMixer;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3bb0eda4c6fd432bb9547765dceafacc", @"Default Pose", @"Override default animation stream values when sum of weights is less than 1", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.NMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> DefaultPoseInput;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"bf403237632b44fabec35cc75c516f28", @"Input", @"Animation stream to blend", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.NMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>>> Inputs;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1d6bfa5b22004f918dd21120bae997aa", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.NMixerNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9718b3bc3af141c4a4f72f93a3283129", @"Weight", @"Blend weight", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.NMixerNode, float>> Weights;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a4a8fea063a9494a9b6f5a63f5625060", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.NMixerNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [System.Runtime.CompilerServices.Extension] public static class NodeSetExt
    {
        [System.Runtime.CompilerServices.Extension] public static void Connect<TType, TData>(Unity.DataFlowGraph.NodeSet set, Unity.DataFlowGraph.NodeHandle<TType> from, Unity.DataFlowGraph.DataOutput<TType, TData> port, Unity.DataFlowGraph.NodeHandle<Unity.DataFlowGraph.ComponentNode> to, Unity.DataFlowGraph.NodeSet.ConnectionType type = 0) where TType : Unity.DataFlowGraph.NodeDefinition where TData : System.ValueType, Unity.Entities.IComponentData, new();
        [System.Runtime.CompilerServices.Extension] public static void Connect<TType, TBuffer>(Unity.DataFlowGraph.NodeSet set, Unity.DataFlowGraph.NodeHandle<TType> from, Unity.DataFlowGraph.DataOutput<TType, Unity.DataFlowGraph.Buffer<TBuffer>> port, Unity.DataFlowGraph.NodeHandle<Unity.DataFlowGraph.ComponentNode> to, Unity.DataFlowGraph.NodeSet.ConnectionType type = 0) where TType : Unity.DataFlowGraph.NodeDefinition where TBuffer : System.ValueType, Unity.Entities.IBufferElementData, new();
        [System.Runtime.CompilerServices.Extension] public static void Connect<TType, TData>(Unity.DataFlowGraph.NodeSet set, Unity.DataFlowGraph.NodeHandle<Unity.DataFlowGraph.ComponentNode> from, Unity.DataFlowGraph.NodeHandle<TType> to, Unity.DataFlowGraph.DataInput<TType, TData> port, Unity.DataFlowGraph.NodeSet.ConnectionType type = 0) where TType : Unity.DataFlowGraph.NodeDefinition where TData : System.ValueType, Unity.Entities.IComponentData, new();
        [System.Runtime.CompilerServices.Extension] public static void Connect<TType, TBuffer>(Unity.DataFlowGraph.NodeSet set, Unity.DataFlowGraph.NodeHandle<Unity.DataFlowGraph.ComponentNode> from, Unity.DataFlowGraph.NodeHandle<TType> to, Unity.DataFlowGraph.DataInput<TType, Unity.DataFlowGraph.Buffer<TBuffer>> port, Unity.DataFlowGraph.NodeSet.ConnectionType type = 0) where TType : Unity.DataFlowGraph.NodeDefinition where TBuffer : System.ValueType, Unity.Entities.IBufferElementData, new();
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"7f966a89b3ed4a6bb24144f7ca8749ba", 1, @"Animation Core/Time", @"Computes normalized time [0, 1] given an input time and duration", false)] public class NormalizedTimeNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.NormalizedTimeNode.Data, Unity.Animation.NormalizedTimeNode.SimPorts, Unity.Animation.NormalizedTimeNode.KernelData, Unity.Animation.NormalizedTimeNode.KernelDefs, Unity.Animation.NormalizedTimeNode.Kernel>, Unity.DataFlowGraph.IMsgHandler<float>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public NormalizedTimeNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref float msg);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.NormalizedTimeNode.KernelData, Unity.Animation.NormalizedTimeNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.NormalizedTimeNode.KernelData data, ref Unity.Animation.NormalizedTimeNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public float Duration;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"5a7635b182b746a49513f4b650da4fc0", , @"Unbound time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.NormalizedTimeNode, float> InputTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9e835dcf0e9c44dfa3bfaf679a355e5f", , @"Normalized time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.NormalizedTimeNode, float> OutputTime;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"28656bd191824b79a53bb0b5bb610400", , @"Duration", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.NormalizedTimeNode, float> Duration;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"a9a00f02c612463b8c82e7e64a62dab9", 1, @"Animation Core/Constraints", @"Parent constraint based on multiple sources", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Source Count", 1, 1, -1, )] public class ParentConstraintNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.ParentConstraintNode.Data, Unity.Animation.ParentConstraintNode.SimPorts, Unity.Animation.ParentConstraintNode.KernelData, Unity.Animation.ParentConstraintNode.KernelDefs, Unity.Animation.ParentConstraintNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.ParentConstraintNode.SetupMessage>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public ParentConstraintNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.ParentConstraintNode.SetupMessage msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.ParentConstraintNode.KernelData, Unity.Animation.ParentConstraintNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.ParentConstraintNode.KernelData data, ref Unity.Animation.ParentConstraintNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int Index;
            public Unity.Mathematics.bool3 LocalRotationAxesMask;
            public Unity.Mathematics.bool3 LocalTranslationAxesMask;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2be76d458fb04c32a7ae30c604462cf5", , @"Constrained animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ParentConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"06c3a94d9cb34c4e9e7901b024f87601", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.ParentConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e620b55354d24e61ab56a046ec4e3b02", @"Source Transform Offset", @"Transform offset of source", false, 1, @"identity", 2, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.ParentConstraintNode, Unity.Mathematics.float4x4>> SourceOffsets;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e975a3f4ed4e42c7b126d9a1e895b21a", @"Source Transform", @"Transform of source", false, 1, @"identity", 2, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.ParentConstraintNode, Unity.Mathematics.float4x4>> SourceTx;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"24fe5915a1c748829a66cc293883a16c", @"Source Weight", @"Weight of source", false, 1, 1, 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.ParentConstraintNode, float>> SourceWeights;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3be8ded6dda8451fb4c95e2895c64641", , @"Constraint weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.ParentConstraintNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SetupMessage
        {
            public int Index;
            public Unity.Mathematics.bool3 LocalRotationAxesMask;
            public Unity.Mathematics.bool3 LocalTranslationAxesMask;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f3ef40263ac8433ba9c94a225953a306", @"Setup", @"Parent constraint properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ParentConstraintNode, Unity.Animation.ParentConstraintNode.SetupMessage> ConstraintSetup;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"04c1c85db1f14360a9c5d86103c1412e", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.ParentConstraintNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"6bbdb6b762d54ffda9f785a665ec3048", 1, @"Animation Core/Constraints", @"Position constraint based on multiple sources", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Source Count", 1, 1, -1, )] public class PositionConstraintNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.PositionConstraintNode.Data, Unity.Animation.PositionConstraintNode.SimPorts, Unity.Animation.PositionConstraintNode.KernelData, Unity.Animation.PositionConstraintNode.KernelDefs, Unity.Animation.PositionConstraintNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.PositionConstraintNode.SetupMessage>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public PositionConstraintNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.PositionConstraintNode.SetupMessage msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.PositionConstraintNode.KernelData, Unity.Animation.PositionConstraintNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.PositionConstraintNode.KernelData data, ref Unity.Animation.PositionConstraintNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int Index;
            public Unity.Mathematics.bool3 LocalAxesMask;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3cbd38040de54afdbf813b5f5dcbda14", , @"Constrained animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.PositionConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0ecbdac393ab4575892c987baa83ca50", , @"Extra local offset to apply to the constrained bone", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.PositionConstraintNode, Unity.Mathematics.float3> LocalOffset;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f5e54d0f6d084cea81f344f9ad25346a", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.PositionConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8c4b87e68a65482682ca513c883f13bf", @"Source Offset", @"Position offset of source", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.PositionConstraintNode, Unity.Mathematics.float3>> SourceOffsets;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"701480920f87408f9f37af621ef8ff6e", @"Source Position", @"Position of source", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.PositionConstraintNode, Unity.Mathematics.float3>> SourcePositions;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4b72f5a047e8448a8ae77c7598804351", @"Source Weight", @"Weight of source", false, 1, 1, 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.PositionConstraintNode, float>> SourceWeights;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c539bc54e23c4d78ab97e80e11d22c94", , @"Constraint weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.PositionConstraintNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SetupMessage
        {
            public int Index;
            public Unity.Mathematics.bool3 LocalAxesMask;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6fb4d7f6a008472497bbc7b9e9b51c2b", @"Setup", @"Position constraint properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.PositionConstraintNode, Unity.Animation.PositionConstraintNode.SetupMessage> ConstraintSetup;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"42e1811684814b83b602a24c3c2b12f1", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.PositionConstraintNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [System.Runtime.CompilerServices.Extension] public static class ResolvedPortArrayExt
    {
        [System.Runtime.CompilerServices.Extension] public static void CopyTo<TDefinition, TType>(Unity.DataFlowGraph.RenderContext/ResolvedPortArray<TDefinition, TType> src, Unity.Collections.NativeArray<TType> dst) where TDefinition : Unity.DataFlowGraph.NodeDefinition where TType : System.ValueType, new();
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"8d7926b8dbcf4072b7cf1a10e29de888", 1, @"Animation Core/Utils", @"Remaps one animation stream to another given a known remapping table", false)] public class RigRemapperNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.RigRemapperNode.Data, Unity.Animation.RigRemapperNode.SimPorts, Unity.Animation.RigRemapperNode.KernelData, Unity.Animation.RigRemapperNode.KernelDefs, Unity.Animation.RigRemapperNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.RigRemapTable>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public RigRemapperNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.RigRemapTable> remapTable);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.RigRemapperNode.KernelData, Unity.Animation.RigRemapperNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.RigRemapperNode.KernelData data, ref Unity.Animation.RigRemapperNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> DestinationRigDefinition;
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigRemapTable> RemapTable;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> SourceRigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"774b612d90fe4e91a79cbacbc9de2b05", @"Default Pose", @"Override default animation stream output values. If not provided output animation stream is populated with default values from the rig destination rig definition.", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RigRemapperNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> DefaultPoseInput;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"43fff4c80729422a860e00c0bb1c1bd5", , @"Animation stream to remap from", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RigRemapperNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"611e6adea3394f9b91be3e2e2db34a56", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.RigRemapperNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a5532ac30bf242b6b276a4803d0a0582", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RigRemapperNode, Unity.Animation.Rig> DestinationRig;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a158ddc749144e2b8553a117d0d3d297", @"Rig Remap Table", @"Remap table between source and destination rigs", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RigRemapperNode, Unity.Entities.BlobAssetReference<Unity.Animation.RigRemapTable>> RemapTable;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"29d7c6f4946c46d199d9d13e11332983", @"Source Rig", @"Source rig to remap animation from", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RigRemapperNode, Unity.Animation.Rig> SourceRig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"5dfa885842654d86b6b2921233ff4994", 1, @"Animation Core/Root Motion", @"Computes root motion values from a baked clip. Used internally by the UberClipNode.", false)] public class RootMotionFromVelocityNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.RootMotionFromVelocityNode.Data, Unity.Animation.RootMotionFromVelocityNode.SimPorts, Unity.Animation.RootMotionFromVelocityNode.KernelData, Unity.Animation.RootMotionFromVelocityNode.KernelDefs, Unity.Animation.RootMotionFromVelocityNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<float>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public RootMotionFromVelocityNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref float msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.RootMotionFromVelocityNode.KernelData, Unity.Animation.RootMotionFromVelocityNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.RootMotionFromVelocityNode.KernelData data, ref Unity.Animation.RootMotionFromVelocityNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
            public float SampleRate;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d331e6acbd5b46b2a096434df4b126f3", , @"The current delta time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RootMotionFromVelocityNode, float> DeltaTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e53e6ee6a0ae489e8ce0e3eb303d4f5e", , @"The current animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RootMotionFromVelocityNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0792d80403b84722ac3d5a930d232b0d", , @"Resulting animation stream with updated root motion values", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.RootMotionFromVelocityNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c43f6e41afb2491b93787e74af1cf755", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RootMotionFromVelocityNode, Unity.Animation.Rig> Rig;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"053eb86f39254af8b28ba650d6bb619e", , @"Clip sample rate", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RootMotionFromVelocityNode, float> SampleRate;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [System.Obsolete(@"RootMotionNode has been deprecated. Use the IAnimatedRootMotion component instead. (RemovedAfter 2020-08-16)")] [Unity.DataFlowGraph.Attributes.NodeDefinition(@"bcaa66b19c1947a9bd447f543602b7d3", 1, @"Animation Core/Root Motion", @"Extracts root motion values from animation stream so these can be used for different operations (i.e store state values in entity components)", false)] public class RootMotionNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.RootMotionNode.Data, Unity.Animation.RootMotionNode.SimPorts, Unity.Animation.RootMotionNode.KernelData, Unity.Animation.RootMotionNode.KernelDefs, Unity.Animation.RootMotionNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public RootMotionNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.RootMotionNode.KernelData, Unity.Animation.RootMotionNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.RootMotionNode.KernelData data, ref Unity.Animation.RootMotionNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"74887b6c68d6496283dc64b56286968a", @"Delta Root Motion Transform", @"Current delta root motion", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.RootMotionNode, Unity.Mathematics.float4x4> DeltaRootX;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"60d7a34c8716403bbaea02a7cd0d3369", , @"The current animation stream with delta root motion values", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ce074fc0bc0e422f915527256409c159", , @"Resulting animation stream without root motion", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.RootMotionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3fa402c9c39e496f961cf7e64f4e4221", @"Previous Root Motion Transform", @"Previous root motion", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RootMotionNode, Unity.Mathematics.float4x4> PrevRootX;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7702d041834c41ae978f353eec0e839a", @"Root Motion Transform", @"Current root motion", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.RootMotionNode, Unity.Mathematics.float4x4> RootX;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"efbce8bfa97f4514999bf6d60a35a29a", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RootMotionNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"a952e1cf248a46dcae1ee07d836b5a6b", 1, @"Animation Core/Constraints", @"Rotation constraint based on multiple sources", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Source Count", 1, 1, -1, )] public class RotationConstraintNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.RotationConstraintNode.Data, Unity.Animation.RotationConstraintNode.SimPorts, Unity.Animation.RotationConstraintNode.KernelData, Unity.Animation.RotationConstraintNode.KernelDefs, Unity.Animation.RotationConstraintNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.RotationConstraintNode.SetupMessage>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public RotationConstraintNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.RotationConstraintNode.SetupMessage msg);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.RotationConstraintNode.KernelData, Unity.Animation.RotationConstraintNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.RotationConstraintNode.KernelData data, ref Unity.Animation.RotationConstraintNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int Index;
            public Unity.Mathematics.bool3 LocalAxesMask;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a4e523e048ee40a1b522818190f38b5e", , @"Constrained animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RotationConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f3a2a53ed58c422e89dc7e160f78dae9", , @"Extra local rotation offset to apply to the constrained bone", false, -1, @"identity", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RotationConstraintNode, Unity.Mathematics.quaternion> LocalOffset;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"dd5656b7a89240d4b0f252fd5ecc7666", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.RotationConstraintNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8811154e824644f2b5aeb34b96ade150", @"Source Rotation Offset", @"Rotation offset of source", false, 1, @"identity", 2, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.RotationConstraintNode, Unity.Mathematics.quaternion>> SourceOffsets;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2c1951d564a546c78c37aa81da2373cf", @"Source Rotation", @"Rotation of source", false, 1, @"identity", 2, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.RotationConstraintNode, Unity.Mathematics.quaternion>> SourceRotations;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"348b1669f081455e942a81101ffd990a", @"Source Weight", @"Weight of source", false, 1, 1, 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.RotationConstraintNode, float>> SourceWeights;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6ef78ae9e9984402873fff63e7bd2533", , @"Constraint weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.RotationConstraintNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SetupMessage
        {
            public int Index;
            public Unity.Mathematics.bool3 LocalAxesMask;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9b9bb03ccab743069fdf1c189d64f938", @"Setup", @"Rotation constraint properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RotationConstraintNode, Unity.Animation.RotationConstraintNode.SetupMessage> ConstraintSetup;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"102486d60787452d95658cc23de7a4c2", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.RotationConstraintNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"75c83d51cb9a4eae8ca36d22068f9943", 1, @"Animation Core/Utils", @"Sets a float value in the AnimationStream", false)] public class SetAnimationStreamFloatNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.SetAnimationStreamFloatNode.Data, Unity.Animation.SetAnimationStreamFloatNode.SimPorts, Unity.Animation.SetAnimationStreamFloatNode.KernelData, Unity.Animation.SetAnimationStreamFloatNode.KernelDefs, Unity.Animation.SetAnimationStreamFloatNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public SetAnimationStreamFloatNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.SetAnimationStreamFloatNode.KernelData, Unity.Animation.SetAnimationStreamFloatNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.SetAnimationStreamFloatNode.KernelData data, ref Unity.Animation.SetAnimationStreamFloatNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"032508f3610f4e72ac7e7c81a04636c1", , @"Index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamFloatNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"f3a390bef90f4b40a5aba7372672632e", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamFloatNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d81cd7f253cc477893acfba2aea8564c", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.SetAnimationStreamFloatNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3644a616440b44d0a287e91947599135", , @"Value to set", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamFloatNode, float> Value;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7f06ce9ed09347acb98706cb707c9bae", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.SetAnimationStreamFloatNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"9be251e51f4c4285835e8ec200827c2b", 1, @"Animation Core/Utils", @"Sets an integer value in the AnimationStream", false)] public class SetAnimationStreamIntNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.SetAnimationStreamIntNode.Data, Unity.Animation.SetAnimationStreamIntNode.SimPorts, Unity.Animation.SetAnimationStreamIntNode.KernelData, Unity.Animation.SetAnimationStreamIntNode.KernelDefs, Unity.Animation.SetAnimationStreamIntNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public SetAnimationStreamIntNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.SetAnimationStreamIntNode.KernelData, Unity.Animation.SetAnimationStreamIntNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.SetAnimationStreamIntNode.KernelData data, ref Unity.Animation.SetAnimationStreamIntNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"91fd45ff2a5b478f93d062eb8d66c4ce", , @"Index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamIntNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"71ae6c1a84f64fa392e0fde5ead8e569", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamIntNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e748767ab74a49c29a02df90f7a45d38", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.SetAnimationStreamIntNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6243111b3c8d488f8714de4b7843fd03", , @"Value to set", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamIntNode, int> Value;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"cbad1651d4cd461d9229170fe64b6d79", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.SetAnimationStreamIntNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"fc3d9f8ad36e447096859f24a9566068", 1, @"Animation Core/Utils", @"Sets the local to parent information of a bone in the AnimationStream", false)] public class SetAnimationStreamLocalToParentNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.SetAnimationStreamLocalToParentNode.Data, Unity.Animation.SetAnimationStreamLocalToParentNode.SimPorts, Unity.Animation.SetAnimationStreamLocalToParentNode.KernelData, Unity.Animation.SetAnimationStreamLocalToParentNode.KernelDefs, Unity.Animation.SetAnimationStreamLocalToParentNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public SetAnimationStreamLocalToParentNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.SetAnimationStreamLocalToParentNode.KernelData, Unity.Animation.SetAnimationStreamLocalToParentNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.SetAnimationStreamLocalToParentNode.KernelData data, ref Unity.Animation.SetAnimationStreamLocalToParentNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9e6ce1ec7bf6416590447fda93b31f82", , @"Bone index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToParentNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"53ee976a6c6f4dc2bd4e46b685c1b595", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a2b35e5c66a54af7b2f02343501c4ea1", , @"Modes to set local to parent information", false, -1, 7, 0, true, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode> Mode;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4dfb549ef5fa46f9a4b3c5c1409a6d47", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3d806bcf6f354d52a0c6ebd0081fcb64", , @"Local to parent rotation", false, -1, @"identity", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.Mathematics.quaternion> Rotation;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ecd88ef3a0a944bbac78e29ffca67f6f", , @"Local to parent scale", false, -1, @"1,1,1", 1, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.Mathematics.float3> Scale;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"de0d324ccae34bf09b7df554ec85ed77", , @"Local to parent translation", false, -1, @"zero", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.Mathematics.float3> Translation;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public enum SetFromMode
        {
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode Rotation = 2;
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode RotationScale = 6;
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode Scale = 4;
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode Translation = 1;
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode TranslationRotation = 3;
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode TranslationRotationScale = 7;
            public const Unity.Animation.SetAnimationStreamLocalToParentNode.SetFromMode TranslationScale = 5;
            public System.UInt32 value__;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"876518107b494d45b5fcddbe84924824", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.SetAnimationStreamLocalToParentNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"d169075041a14a55ad2839660df1f826", 2, @"Animation Core/Utils", @"Sets the local to root information of a bone in the AnimationStream", false)] public class SetAnimationStreamLocalToRootNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.SetAnimationStreamLocalToRootNode.Data, Unity.Animation.SetAnimationStreamLocalToRootNode.SimPorts, Unity.Animation.SetAnimationStreamLocalToRootNode.KernelData, Unity.Animation.SetAnimationStreamLocalToRootNode.KernelDefs, Unity.Animation.SetAnimationStreamLocalToRootNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public SetAnimationStreamLocalToRootNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.SetAnimationStreamLocalToRootNode.KernelData, Unity.Animation.SetAnimationStreamLocalToRootNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.SetAnimationStreamLocalToRootNode.KernelData data, ref Unity.Animation.SetAnimationStreamLocalToRootNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c974e77c39514d99bf577908b3d60966", , @"Bone index in stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToRootNode, int> Index;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"815d613070ae4a99b552133b5c3639fb", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"08811c01c2a1481f843c91eb59316568", , @"Modes to set local to root information", false, -1, 3, 0, true, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode> Mode;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4a9bee390af346598ca0c0e2096c5cbd", , @"Resulting stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"b4f432efde51485aaa34b41f05f70cf8", , @"Local to root rotation", false, -1, @"identity", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.Mathematics.quaternion> Rotation;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"32e0df0a45534a7b99eab94235903d31", , @"Local to root scale", false, -1, @"1,1,1", 1, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.Mathematics.float3> Scale;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"96bc08b3e69849f19419aa116fdd7ed8", , @"Local to root translation", false, -1, @"zero", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.Mathematics.float3> Translation;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public enum SetFromMode
        {
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode Rotation = 2;
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode RotationScale = 6;
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode Scale = 4;
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode Translation = 1;
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode TranslationRotation = 3;
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode TranslationRotationScale = 7;
            public const Unity.Animation.SetAnimationStreamLocalToRootNode.SetFromMode TranslationScale = 5;
            public System.UInt32 value__;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"78cc61d047334ae28284190bbd93e5db", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.SetAnimationStreamLocalToRootNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    public class SimPassThroughNode<T> : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.SimPassThroughNode<T>, Unity.Animation.SimPassThroughNode<T>>, Unity.DataFlowGraph.IMsgHandler<T> where T : System.ValueType, new()
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public SimPassThroughNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref T msg);
        public struct SimPorts<T> : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition where T : System.ValueType, new()
        {
            public Unity.DataFlowGraph.MessageInput<Unity.Animation.SimPassThroughNode<T>, T> Input;
            public Unity.DataFlowGraph.MessageOutput<Unity.Animation.SimPassThroughNode<T>, T> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct Data<T> : Unity.DataFlowGraph.INodeData where T : System.ValueType, new()
        {
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"3fbf9c93754341edaff155b9fa8363b1", 1, @"Animation Core/Time", @"Accumulates and output's current time based on scale and delta time", false)] public class TimeCounterNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.TimeCounterNode.Data, Unity.Animation.TimeCounterNode.SimPorts, Unity.Animation.TimeCounterNode.KernelData, Unity.Animation.TimeCounterNode.KernelDefs, Unity.Animation.TimeCounterNode.Kernel>, Unity.DataFlowGraph.IMsgHandler<float>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public TimeCounterNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref float msg);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        protected virtual void OnUpdate(Unity.DataFlowGraph.UpdateContext& modreq(System.Runtime.InteropServices.InAttribute) ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
            public int SetTime;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.TimeCounterNode.KernelData, Unity.Animation.TimeCounterNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.TimeCounterNode.KernelData data, ref Unity.Animation.TimeCounterNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileTimeCounter;
            public int SetTime;
            public float Time;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d8ede9b577394cd68bfb0c644f2f2ad2", , @"Delta time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TimeCounterNode, float> DeltaTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"310ed32c573a4849968c1eb9ee9e970c", , @"Resulting delta time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TimeCounterNode, float> OutputDeltaTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"8c681e55e7954532a9d56522b2cd1ea1", @"Time Scale", @"Delta time scale factor", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TimeCounterNode, float> Speed;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"828327bc9f834fcab7d9931d3aa9992e", , @"Resulting time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TimeCounterNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"6f1144ea235449529f0e29c58009a605", , @"Set internal time to this value", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.TimeCounterNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"87d20894ea0f4dda9561374a1fef063e", 1, @"Animation Core/Time", @"Computes looping time and cycle count given a duration and unbound time", false)] public class TimeLoopNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.TimeLoopNode.Data, Unity.Animation.TimeLoopNode.SimPorts, Unity.Animation.TimeLoopNode.KernelData, Unity.Animation.TimeLoopNode.KernelDefs, Unity.Animation.TimeLoopNode.Kernel>, Unity.DataFlowGraph.IMsgHandler<float>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public TimeLoopNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref float msg);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.TimeLoopNode.KernelData, Unity.Animation.TimeLoopNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.TimeLoopNode.KernelData data, ref Unity.Animation.TimeLoopNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public float Duration;
            public Unity.Profiling.ProfilerMarker ProfileTimeLoop;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e455fa9a87b248b28ea4a413c68c82a6", , @"Number of duration cycles", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TimeLoopNode, int> Cycle;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c8cf3f694056417bb986c6499eb74436", , @"Unbound time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TimeLoopNode, float> InputTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"69ee1fe6b1bb4584bdc4d90b9879a093", , @"Normalized time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TimeLoopNode, float> NormalizedTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0821d3d978d84e38880232ab0ff09974", , @"Time (computed from normalized time multiplied by duration)", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TimeLoopNode, float> OutputTime;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"967a157223c2426e8ba2a0cbdfc801a1", , @"Duration", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.TimeLoopNode, float> Duration;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"6f515a98326e46108f9f2f9c251c3afb", 1, @"Animation Core/Constraints", @"Twist correction is mainly used to redistribute a percentage of the source rotation over a leaf bone in order to correct mesh deformation artifacts.", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Twist Bone Count", 1, 1, -1, )] public class TwistCorrectionNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.TwistCorrectionNode.Data, Unity.Animation.TwistCorrectionNode.SimPorts, Unity.Animation.TwistCorrectionNode.KernelData, Unity.Animation.TwistCorrectionNode.KernelDefs, Unity.Animation.TwistCorrectionNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public TwistCorrectionNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.TwistCorrectionNode.KernelData, Unity.Animation.TwistCorrectionNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.TwistCorrectionNode.KernelData data, ref Unity.Animation.TwistCorrectionNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"fb3aa28263ca41c597334c64fa72f2d6", , @"Constrained animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"54d9a28f88b14fbcb7891b22cb8f6c0e", , @"Local Twist Axis", false, -1, 1, 0, true, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, Unity.Animation.TwistCorrectionNode.TwistAxis> LocalTwistAxis;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ef48a63dba7342ac98daee94e04e032d", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TwistCorrectionNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"288e5ce189d9433aa08d5b91223d8e4d", @"Source Default Rotation", @"Default or initial rotation of the source at setup. This is used to compute the delta twist rotation", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, Unity.Mathematics.quaternion> SourceDefaultRotation;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"66c5ef437395453dbcfbb8db213d0302", @"Source Rotation", @"Current rotation of the source", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, Unity.Mathematics.quaternion> SourceRotation;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"12e0b4566cfb45858d9673aa403bc2fa", @"Twist Bone Index", @"Twist bones driven by the source", false, 1, -1, 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, int>> TwistIndices;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d7ca08c609794eed8c1128a43651ae83", @"Twist Bone Weight", @"Twist bone weights", false, 1, 0, 0, false, -1, 1)] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, float>> TwistWeights;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"80d8c2d01696487c80650d88d90ffaf1", , @"Constraint Weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwistCorrectionNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"caa9251733f2457ea17846b8218f21f5", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.TwistCorrectionNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public enum TwistAxis
        {
            public int value__;
            public const Unity.Animation.TwistCorrectionNode.TwistAxis X = 0;
            public const Unity.Animation.TwistCorrectionNode.TwistAxis Y = 1;
            public const Unity.Animation.TwistCorrectionNode.TwistAxis Z = 2;
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"bf4c5a78bcd94ce7a5ad2d0efd5fa50b", 1, @"Animation Core/Constraints", @"Two bone IK solver", false)] public class TwoBoneIKNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.TwoBoneIKNode.Data, Unity.Animation.TwoBoneIKNode.SimPorts, Unity.Animation.TwoBoneIKNode.KernelData, Unity.Animation.TwoBoneIKNode.KernelDefs, Unity.Animation.TwoBoneIKNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.TwoBoneIKNode.SetupMessage>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public TwoBoneIKNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.TwoBoneIKNode.SetupMessage msg);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.TwoBoneIKNode.KernelData, Unity.Animation.TwoBoneIKNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext ctx, Unity.Animation.TwoBoneIKNode.KernelData data, ref Unity.Animation.TwoBoneIKNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public int MidIndex;
            public Unity.Profiling.ProfilerMarker ProfilerMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
            public int RootIndex;
            public Unity.Mathematics.RigidTransform TargetOffset;
            public int TipIndex;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4565216d6b774cddac133611b381573c", , @"Target hint position", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, Unity.Mathematics.float3> Hint;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"957aecbd6a5d4c339ddfecdf2fb6a8c0", , @"IK hint weight", false, -1, 0, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, float> HintWeight;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"55cc66b4bcde41d3849b5c8403c3df36", , @"Constrained animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1fd2e17847354cffb011e3c8c6eb3218", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.TwoBoneIKNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"a9076de32ec4452e8bffb618b2a92661", , @"Target transform", false, -1, @"identity", 2, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, Unity.Mathematics.float4x4> Target;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"92dfc7cebc6d47d89e1f28650a8b718b", , @"IK goal position weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, float> TargetPositionWeight;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"be2b285734ad4efdb06b01e035bae0ee", , @"IK goal rotation weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, float> TargetRotationWeight;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"06e6b83ca095476d88ae1f05ba180705", , @"Constraint weight", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.TwoBoneIKNode, float> Weight;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SetupMessage
        {
            public int MidIndex;
            public int RootIndex;
            public Unity.Mathematics.RigidTransform TargetOffset;
            public int TipIndex;
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"d86d0bb4849f4bf18a6cb707ebd3db2c", @"Setup", @"Two bone IK properties", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.TwoBoneIKNode, Unity.Animation.TwoBoneIKNode.SetupMessage> ConstraintSetup;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"333243e5ba1b4cff93931c03de198e70", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.TwoBoneIKNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"859141ab001b4967b5ea5798db0e5879", 1, @"Animation Core", @"Clip node that can perform different actions based on clip configuration data and supports root motion", true)] public class UberClipNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.UberClipNode.Data, Unity.Animation.UberClipNode.SimPorts, Unity.Animation.UberClipNode.KernelData, Unity.Animation.UberClipNode.KernelDefs, Unity.Animation.UberClipNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<bool>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.ClipConfiguration>, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.IMsgHandler<Unity.Entities.BlobAssetReference<Unity.Animation.Clip>>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public UberClipNode() {}
        public static Unity.Entities.BlobAssetReference<Unity.Animation.Clip> Bake(Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> rig, Unity.Entities.BlobAssetReference<Unity.Animation.Clip> sourceClip, Unity.Animation.ClipConfiguration clipConfiguration, float sampleRate = 60);
        public static Unity.Entities.BlobAssetReference<Unity.Animation.Clip> Bake(Unity.DataFlowGraph.NodeSet set, Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> rig, Unity.Entities.BlobAssetReference<Unity.Animation.Clip> sourceClip, Unity.Animation.ClipConfiguration clipConfiguration, float sampleRate = 60);
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref bool msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.ClipConfiguration msg);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Entities.BlobAssetReference<Unity.Animation.Clip> clip);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
            public Unity.Entities.BlobAssetReference<Unity.Animation.Clip> Clip;
            public bool IsAdditive;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.UberClipNode.KernelData, Unity.Animation.UberClipNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.UberClipNode.KernelData data, ref Unity.Animation.UberClipNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c82bccad0b5f4b839e76eb1da59010e9", , @"Delta time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.UberClipNode, float> DeltaTime;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"ab8b8a72b06c43079fa00e5667330677", , @"Resulting animation stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.UberClipNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9f83a135cc284cd587e0c4c03d98f335", , @"Unbound time", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.UberClipNode, float> Time;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"b932e67455d24b0a818f6b04725231db", , @"Is this an additive clip", false, -1, false, 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.UberClipNode, bool> Additive;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"1ed1dbc98c954b40aa5b7da1ea927487", , @"Clip to sample", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.UberClipNode, Unity.Entities.BlobAssetReference<Unity.Animation.Clip>> Clip;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"e9e28a1a30ed4ad3b48bc7e86a30bf30", , @"Clip configuration data", false, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.UberClipNode, Unity.Animation.ClipConfiguration> Configuration;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"3e1fda046ee345d7868bede5248b110b", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.UberClipNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"7921f59316444412ae7120293a3cfe74", 1, @"Animation Core/Utils", @"Creates weight masks based on passed channel indices and weights", false)] [Unity.DataFlowGraph.Attributes.PortGroupDefinition(@"Number of channels", 1, 1, -1, )] public class WeightBuilderNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.WeightBuilderNode.Data, Unity.Animation.WeightBuilderNode.SimPorts, Unity.Animation.WeightBuilderNode.KernelData, Unity.Animation.WeightBuilderNode.KernelDefs, Unity.Animation.WeightBuilderNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public WeightBuilderNode() {}
        protected virtual void Destroy(Unity.DataFlowGraph.DestroyContext ctx);
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.WeightBuilderNode.KernelData, Unity.Animation.WeightBuilderNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.WeightBuilderNode.KernelData data, ref Unity.Animation.WeightBuilderNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4a113099c106421596a3e0354e0a3e39", @"Channel Index", @"Channel index in rig definition", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.WeightBuilderNode, int>> ChannelIndices;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"4facdf4f067e42b290e8d7cbdf320ef8", @"Channel Weight", @"Weight value for this channel", false, 1, , 0, false, , )] public Unity.DataFlowGraph.PortArray<Unity.DataFlowGraph.DataInput<Unity.Animation.WeightBuilderNode, float>> ChannelWeights;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"2e023389c8bc4077b1a2e6b0107a0f7d", , @"Default weight that is applied to all channels", false, -1, 1, 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.WeightBuilderNode, float> DefaultWeight;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"0c1edff7de2a4184b203814dcc77ac1e", , @"Resulting weight data", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.WeightBuilderNode, Unity.DataFlowGraph.Buffer<Unity.Animation.WeightData>> Output;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"197cf10d665a4f4981fad39738643998", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.WeightBuilderNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }

    [Unity.DataFlowGraph.Attributes.NodeDefinition(@"6daa5f5c6f7e4944ae29a32f6e60219d", 1, @"Animation Core/Utils", @"Applies a set of weights to an animation stream", false)] public class WeightPoseNode : Unity.DataFlowGraph.NodeDefinition<Unity.Animation.WeightPoseNode.Data, Unity.Animation.WeightPoseNode.SimPorts, Unity.Animation.WeightPoseNode.KernelData, Unity.Animation.WeightPoseNode.KernelDefs, Unity.Animation.WeightPoseNode.Kernel>, Unity.Animation.IRigContextHandler, Unity.DataFlowGraph.IMsgHandler<Unity.Animation.Rig>, Unity.DataFlowGraph.ITaskPort<Unity.Animation.IRigContextHandler>, Unity.DataFlowGraph.ITaskPortMsgHandler<Unity.Animation.IRigContextHandler, Unity.Animation.Rig>
    {
        protected virtual Unity.DataFlowGraph.NodeTraitsBase BaseTraits { get; }
        public WeightPoseNode() {}
        public void HandleMessage(ref Unity.DataFlowGraph.MessageContext ctx, ref Unity.Animation.Rig rig);
        protected virtual void Init(Unity.DataFlowGraph.InitContext ctx);
        public struct Data : Unity.DataFlowGraph.INodeData
        {
        }
        [Unity.Burst.BurstCompile] public struct Kernel : Unity.DataFlowGraph.IGraphKernel, Unity.DataFlowGraph.IGraphKernel<Unity.Animation.WeightPoseNode.KernelData, Unity.Animation.WeightPoseNode.KernelDefs>
        {
            public virtual void Execute(Unity.DataFlowGraph.RenderContext context, Unity.Animation.WeightPoseNode.KernelData data, ref Unity.Animation.WeightPoseNode.KernelDefs ports);
        }
        public struct KernelData : Unity.DataFlowGraph.IKernelData
        {
            public Unity.Profiling.ProfilerMarker ProfileMarker;
            public Unity.Entities.BlobAssetReference<Unity.Animation.RigDefinition> RigDefinition;
        }
        public struct KernelDefs : Unity.DataFlowGraph.IKernelPortDefinition, Unity.DataFlowGraph.IPortDefinitionInitializer
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"9605259413914ff19f0e2c97ff3fa5be", , @"Input stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.WeightPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Input;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"c204fb5eb8ad4d5ca785b29d75fc08d5", , @"Resulting weighted stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataOutput<Unity.Animation.WeightPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.AnimatedData>> Output;
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"7501e6c443454813b4f3ae6645f70413", , @"Weights to apply on stream", false, -1, , 0, false, , )] public Unity.DataFlowGraph.DataInput<Unity.Animation.WeightPoseNode, Unity.DataFlowGraph.Buffer<Unity.Animation.WeightData>> WeightMasks;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
        public struct SimPorts : Unity.DataFlowGraph.IPortDefinitionInitializer, Unity.DataFlowGraph.ISimulationPortDefinition
        {
            [Unity.DataFlowGraph.Attributes.PortDefinition(@"b1ad5e24921d46c6a5c42f3ac54a4bfc", , , true, -1, , 0, false, , )] public Unity.DataFlowGraph.MessageInput<Unity.Animation.WeightPoseNode, Unity.Animation.Rig> Rig;
            public virtual System.UInt16 DFG_CG_GetInputPortCount();
            public virtual System.UInt16 DFG_CG_GetOutputPortCount();
            public virtual void DFG_CG_Initialize(System.UInt16 uniqueInputPort, System.UInt16 uniqueOutputPort);
        }
    }
}

namespace Unity.DataFlowGraph.Attributes
{
    public enum DefaultValueType
    {
        public const Unity.DataFlowGraph.Attributes.DefaultValueType ComplexValue = 1;
        public const Unity.DataFlowGraph.Attributes.DefaultValueType Reference = 2;
        public const Unity.DataFlowGraph.Attributes.DefaultValueType Value = 0;
        public int value__;
    }

    [System.AttributeUsage(4)] public class NodeDefinitionAttribute : System.Attribute
    {
        public string Category { get; }
        public string Guid { get; }
        public bool IsHidden { get; }
        public string NodeDescription { get; }
        public int Version { get; }
        public NodeDefinitionAttribute(string guid, int version, string category = , string description = , bool isHidden = False) {}
    }

    [System.AttributeUsage(256)] public class PortDefinitionAttribute : System.Attribute
    {
        public object DefaultValue { get; }
        public Unity.DataFlowGraph.Attributes.DefaultValueType DefaultValueType { get; }
        public string Description { get; }
        public string DisplayName { get; }
        public string Guid { get; }
        public bool IsHidden { get; }
        public bool IsStatic { get; }
        public object MaxValueUI { get; }
        public object MinValueUI { get; }
        public int PortGroupIndex { get; }
        public PortDefinitionAttribute(string guid, string displayName = default(string), string description = default(string), bool isHidden = False, int portGroupIndex = -1, object defaultValue = default(object), Unity.DataFlowGraph.Attributes.DefaultValueType defaultValueType = 0, bool isStatic = False, object minValueUI = default(object), object maxValueUI = default(object)) {}
    }

    [System.AttributeUsage(4)] public class PortGroupDefinitionAttribute : System.Attribute
    {
        public int MaxInstance { get; }
        public int MinInstance { get; }
        public int PortGroupIndex { get; }
        public string PortGroupSizeDescription { get; }
        public string SimulationPortToDrive { get; }
        public PortGroupDefinitionAttribute(string portGroupSizeDescription, int groupIndex, int minInstance = 0, int maxInstance = -1, string simulationPortToDrive = default(string)) {}
    }
}
